<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- product -->
<mapper namespace="com.sskjdata.wms.mapper.ProductMapper">
    <!-- 字段映射 -->
    <resultMap id="productMap" type="com.sskjdata.wms.entity.ProductEntity">
        <id column="product_id" property="productId" jdbcType="INTEGER" />
        <result column="product_name" property="productName" jdbcType="CHAR" />
        <result column="category_id" property="categoryId" jdbcType="INTEGER" />
        <result column="product_title" property="productTitle" jdbcType="CHAR" />
        <result column="product_intro" property="productIntro" jdbcType="CHAR" />
        <result column="product_picture" property="productPicture" jdbcType="CHAR" />
        <result column="product_price" property="productPrice" jdbcType="DOUBLE" />
        <result column="product_selling_price" property="productSellingPrice" jdbcType="DOUBLE" />
        <result column="product_num" property="productNum" jdbcType="INTEGER" />
        <result column="product_sales" property="productSales" jdbcType="INTEGER" />
    </resultMap>

    <!-- 表所有字段 -->
    <sql id="allColumns">
        product.product_id, product.product_name, product.category_id, product.product_title, product.product_intro, product.product_picture, product.product_price, product.product_selling_price, 
        product.product_num, product.product_sales
    </sql>

    <!-- 根据条件参数查询数据列表 -->
    <select id="findByCondition" resultMap="productMap">
        SELECT
            <include refid="allColumns" />
        FROM product product WHERE 1 = 1
        <if test="productName != null and productName != ''">
            AND product.product_name LIKE CONCAT('%', #{productName}, '%')
        </if>
        <if test="categoryId != null">
            AND product.category_id = #{categoryId}
        </if>
        <if test="productTitle != null and productTitle != ''">
            AND product.product_title LIKE CONCAT('%', #{productTitle}, '%')
        </if>
    </select>

    <!-- 根据主键批量删除数据 -->
    <delete id="deleteByIds" parameterType="list">
        DELETE FROM product WHERE product_id IN
        <foreach collection="list" index="index" item="productId" open="(" separator="," close=")">
            #{productId}
        </foreach>
    </delete>

    <select id="getAllProduct" parameterType="com.sskjdata.wms.dto.ProductGetReq" resultType="hashmap" >
        SELECT * from product
    </select>

    <select id="getPromoProduct" resultType="hashmap">
        select * from product where category_id = #{categoryId} order by product_sales desc limit 7
    </select>
    
    <select id="getProductByCategory" parameterType="list" resultType="hashmap">
        select * from product where category_id IN
        <foreach collection="list" item="one" open="(" close=")" separator="," index="one">
            #{one}
        </foreach>
        order by product_sales desc
        limit 0,7
    </select>

    <select id="getProductByCategoryId" parameterType="com.sskjdata.wms.dto.ProductByCategoryIdReq" resultType="hashmap">
        select * from product where category_id = #{categoryID}
        order by product_sales desc
        limit #{start},#{pageSize}
    </select>

    <select id="getProductByCategoryIdToTal" parameterType="com.sskjdata.wms.dto.ProductByCategoryIdReq" resultType="integer">
        select count(*) from product where category_id = #{categoryID}

    </select>

    <select id="getProductByName" parameterType="com.sskjdata.wms.dto.ProductByNameReq" resultType="hashmap">
        select * from product where product_name like concat('%',#{search},'%')  or product_title like concat('%',#{search},'%') or product_intro like concat('%',#{search},'%')
        order by product_sales desc
        limit #{start},#{pageSize}
    </select>

    <select id="getProductByNameToTal" parameterType="com.sskjdata.wms.dto.ProductByNameReq" resultType="integer">
        select count(*) from product where product_name like concat('%',#{search},'%')  or product_title like concat('%',#{search},'%') or product_intro like concat('%',#{search},'%')
    </select>

    <select id="getProductById" parameterType="com.sskjdata.wms.dto.ProductByIdReq" resultType="hashmap">
       select * from product where product_id = #{productID}
    </select>

    <select id="getMaxNumByProductId" resultType="integer">
        SELECT
        ROUND(p.product_num/2) maxNum
        from  product  p
        where p.product_id = #{productId}
    </select>

</mapper>